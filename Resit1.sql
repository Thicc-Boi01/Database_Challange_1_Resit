/*
Thomas Casey
102041946
*/

/*

SUBJECT(SUBJCODE, DESCRIPTION)
PRIMARY KEY (SUBJCODE)

TEACHER(STAFFID, SURNAME, GIVENNAME)
PRIMARY KEY (STAFFID)

STUDENT(STUDENTID, SURNAME, GIVENNAME, GENDER)
PRIMARY KEY (STUDENTID)

SUBJECTOFFERING(SUBJCODE, YEAR, SEMESTER, FEE, STAFFID)
PRIMARY KEY (SUBJCODE, YEAR, SEMESTER)
FOREIGN KEY (SUBJCODE) REFRENCES SUBJECT
FOREIGN KEY (STAFFID) REFRENCES TEACHER

ENROLMENT(STUDENTID, YEAR, SEMESTER, SUBJCODE, DATEENROLLED, GRADE)
PRIMARY KEY (YEAR, SEMESTER, SUBJCODE, STUDENTID)
FOREIGN KEY (STUDENTID) REFRENCES STUDENT
FOREIGN KEY (YEAR, SEMESTER, SUBJCODE) REFRENCES SUBJOFFERING


*/
CREATE DATABASE RESIT
USE RESIT


CREATE TABLE SUBJECT
(
    SUBJCODE NVARCHAR(100)
    ,
    DESCRIPTION NVARCHAR(500)
    ,
    PRIMARY KEY (SUBJCODE)
)

CREATE TABLE TEACHER
(
    STAFFID INT
    ,
    SURNAME NVARCHAR(100) NOT NULL
    ,
    GIVENNAME NVARCHAR(100) NOT NULL
    ,
    PRIMARY KEY (STAFFID)
    ,
    CONSTRAINT CHK_STAFFID_LEG CHECK (LEN(STAFFID)=8)
)

CREATE TABLE STUDENT
(
    STUDENTID NVARCHAR(10)
    ,
    SURNAME NVARCHAR(100) NOT NULL
    ,
    GIVENNAME NVARCHAR(100) NOT NULL
    ,
    GENDER NVARCHAR(1)
    ,
    PRIMARY KEY (STUDENTID)
    ,
    CONSTRAINT CHK_STUDENT_GEN CHECK (GENDER IN ('M', 'F', 'I'))
)

CREATE TABLE SUBJECTOFFERING
(
    SUBJCODE NVARCHAR(100)
    ,
    YEAR INT
    ,
    SEMESTER INT
    ,
    FEE MONEY NOT NULL
    ,
    STAFFID INT
    ,
    PRIMARY KEY (SUBJCODE, YEAR, SEMESTER)
    ,
    FOREIGN KEY (SUBJCODE) REFERENCES SUBJECT
    ,
    FOREIGN KEY (STAFFID) REFERENCES TEACHER
    ,
    CONSTRAINT CHK_SUBJECTOFFERING_YEAR CHECK (LEN(YEAR)=4)
    ,
    CONSTRAINT CHK_SUBJECTOFFERING_SEM CHECK (SEMESTER IN (1,2))
    ,
    CONSTRAINT CHK_SUBJECTOFFERING_FEE CHECK (FEE > 0)
)

CREATE TABLE ENROLMENT
(
    STUDENTID NVARCHAR(10)
    ,
    YEAR INT
    ,
    SEMESTER INT
    ,
    SUBJCODE NVARCHAR(100)
    ,
    DATEENROLLED DATE
    ,
    GRADE NVARCHAR(2)
    ,
    PRIMARY KEY (YEAR, SEMESTER, SUBJCODE, STUDENTID)
    ,
    FOREIGN KEY (STUDENTID) REFERENCES STUDENT
    ,
    FOREIGN KEY (SUBJCODE, YEAR, SEMESTER) REFERENCES SUBJECTOFFERING
    ,
    CONSTRAINT CHK_ENROLMENT_YEAR CHECK (LEN(YEAR)=4)
    ,
    CONSTRAINT CHK_ENROLMENT_SEM CHECK (SEMESTER IN (1,2))
    ,
    CONSTRAINT CHK_ENROLMENT_GRADE CHECK (GRADE IN ('N', 'P', 'C', 'D', 'HD'))
)

--TEST TABLES
SELECT NAME
FROM SYS.objects
WHERE TYPE = 'U'

--DATA

INSERT INTO SUBJECT
    (SUBJCODE, [DESCRIPTION])
VALUES
    ('ICTPRG418', 'Apply SQL to extract & manipulate data'),
    ('ICTBSB430', 'Create Basic Databases'),
    ('ICTDBS205', 'Design a Database');


INSERT INTO TEACHER
    (STAFFID, SURNAME, GIVENNAME)
VALUES
    (98776655, 'Young', 'Angus'),
    (87665544, 'Scott', 'Bon'),
    (76554433, 'Slade', 'Chris');


INSERT INTO STUDENT
    (STUDENTID, SURNAME, GIVENNAME, GENDER)
VALUES
    ('s12233445', 'Baird', 'Tim', 'M'),
    ('s23344556', 'Nguyen', 'Anh', 'M'),
    ('s34455667', 'Hallinan', 'James', 'M'),
    ('s10204194', 'Casey', 'Thomas', 'M');


INSERT INTO SUBJECTOFFERING
    (SUBJCODE, YEAR, SEMESTER, FEE, STAFFID)
VALUES
    ('ICTPRG418', 2019, 1, 200, 98776655),
    ('ICTPRG418', 2020, 1, 225, 98776655),
    ('ICTBSB430', 2020, 1, 200, 87665544),
    ('ICTBSB430', 2020, 2, 200, 76554433),
    ('ICTDBS205', 2019, 2, 225, 87665544);


INSERT INTO ENROLMENT
    (STUDENTID, SUBJCODE, YEAR, SEMESTER, GRADE, DATEENROLLED)
VALUES
    ('s12233445', 'ICTPRG418', 2019, 1, 'D', '02/25/2019'),
    ('s23344556', 'ICTPRG418', 2019, 1, 'P', '02/15/2019'),
    ('s12233445', 'ICTPRG418', 2020, 1, 'C', '01/30/2020'),
    ('s23344556', 'ICTPRG418', 2020, 1, 'HD', '02/26/2020'),
    ('s34455667', 'ICTPRG418', 2020, 1, 'P', '01/28/2020'),
    ('s12233445', 'ICTBSB430', 2020, 1, 'C', '02/08/2020'),
    ('s23344556', 'ICTBSB430', 2020, 2, null, '06/30/2020'),
    ('s34455667', 'ICTBSB430', 2020, 2, null, '07/03/2020'),
    ('s23344556', 'ICTDBS205', 2019, 2, 'P', '07/01/2019'),
    ('s34455667', 'ICTDBS205', 2019, 2, 'N', '07/13/2019'),
    ('s10204194', 'ICTDBS205', 2019, 2, 'HD', '07/13/2019');


/* Write a query that shows the student first name and surname,
 the subject code and description, the subject offering year,
  semester & fee and the given name and surname of the teacher
   for that subject offering. */

SELECT ST.GIVENNAME, ST.SURNAME, S.SUBJCODE, SU.[DESCRIPTION], S.[YEAR], S.SEMESTER, S.FEE, T.GIVENNAME, T.SURNAME
FROM ENROLMENT E
    INNER JOIN
    SUBJECTOFFERING S
    ON E.SUBJCODE = S.SUBJCODE AND E.YEAR = S.[YEAR] AND E.SEMESTER = S.SEMESTER
    INNER JOIN TEACHER T
    ON S.STAFFID = T.STAFFID
    INNER JOIN STUDENT ST
    ON E.STUDENTID = ST.STUDENTID
    INNER JOIN SUBJECT SU
    ON S.SUBJCODE = SU.SUBJCODE;


/* Write a query which shows the numberof enrolments,
 for each year and semester in the following example format.
*/

SELECT YEAR, SEMESTER, COUNT(*) AS 'NUM ENROLLMENTS'
FROM ENROLMENT
GROUP BY YEAR, SEMESTER;

/* Write a query which lists all enrolments which for the subject
 offering which has the highest fee. (This query must use a sub-query.) 
 */

SELECT E.*
FROM ENROLMENT E
    INNER JOIN SUBJECTOFFERING s
    ON E.SUBJCODE = S.SUBJCODE AND E.YEAR=S. [YEAR] AND E.SEMESTER = S.SEMESTER
WHERE S.FEE IN (SELECT MAX(FEE)
FROM SUBJECTOFFERING);

--TASK5

CREATE VIEW TASK_5
AS
    SELECT ST.GIVENNAME AS STUDENT_FIRSTNAME, ST.SURNAME AS STUDENT_SURNAME, S.SUBJCODE, SU.[DESCRIPTION], S.[YEAR], S.SEMESTER, S.FEE, T.GIVENNAME, T.SURNAME
    FROM ENROLMENT E
        INNER JOIN
        SUBJECTOFFERING S
        ON E.SUBJCODE = S.SUBJCODE AND E.YEAR = S.[YEAR] AND E.SEMESTER = S.SEMESTER
        INNER JOIN TEACHER T
        ON S.STAFFID = T.STAFFID
        INNER JOIN STUDENT ST
        ON E.STUDENTID = ST.STUDENTID
        INNER JOIN SUBJECT SU
        ON S.SUBJCODE = SU.SUBJCODE;



--QUERY 1
--WHEN I RUN QUERY 1 I GET 10 ROWS IN RETURN
--THE NUMBER OF ENROLMENTS IS 10 SO THIS MAKES SENCE

--QUERY2
--WHEN I ADD UP ALL OF THE ENROLMENTS I GET 10

--QUERY3
THIS CAN BE VARIFIED BY FINDING THE MAX FEE

SELECT MAX(FEE)
FROM SUBJECTOFFERING



